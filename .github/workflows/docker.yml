name: Deploy Airflow to EC2

on:
  push:
    branches:
      - main
    paths:
      - 'airflow/dags/**'
      - 'airflow/plugins/**'
      - 'airflow/prod.yaml'
      - 'airflow/compose/prod/traefik/**'

env:
  AWS_REGION: us-west-2  # Change this to your AWS region
permissions:
  id-token: write   # Required for requesting the JWT
  contents: read  

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Add EC2 host key to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          # Create a tar of the repository
          tar -czvf deploy.tar.gz \
                airflow/dags/ \
                airflow/plugins/ \
                airflow/docker-compose.yaml \
                airflow/compose/prod/traefik/ \
                airflow/prod.yaml

          # Copy files to EC2
          scp deploy.tar.gz ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/airflow-deploy.tar.gz

          # Execute deployment commands on EC2
          ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
              # Set variables for directories
              DEPLOY_DIR=~/projects/stock-watcher/airflow
              TEMP_DIR=~/temp_deploy
              BACKUP_DIR=$DEPLOY_DIR/backups

              # Ensure proper permissions
              sudo chown -R $USER:$USER $DEPLOY_DIR
              sudo chmod -R u+rwX $DEPLOY_DIR

              # Create temporary directory for new files
              mkdir -p $TEMP_DIR
              cd $TEMP_DIR

              # Extract new files to temporary directory
              tar -xzf ~/airflow-deploy.tar.gz

              # Backup current state
              timestamp=$(date +%Y%m%d_%H%M%S)
              mkdir -p $BACKUP_DIR
              tar -czf $BACKUP_DIR/backup_${timestamp}.tar.gz -C $DEPLOY_DIR .

              # Sync new DAGs with more permissive rsync
              rsync -av --no-g --delete --chmod=Du+rwx,Fu+rw $TEMP_DIR/airflow/dags/ $DEPLOY_DIR/dags/

              # Sync new plugins with more permissive rsync
              rsync -av --no-g --delete --chmod=Du+rwx,Fu+rw $TEMP_DIR/airflow/plugins/ $DEPLOY_DIR/plugins/

              # Copy new prod and traefik files only if they exist
              if [ -f $TEMP_DIR/airflow/prod.yaml ]; then
                  cp $TEMP_DIR/airflow/prod.yaml $DEPLOY_DIR/
              fi

              if [ -d $TEMP_DIR/airflow/compose/prod/traefik ]; then
                  rsync -av --chmod=Du+rwx,Fu+rw $TEMP_DIR/airflow/compose/prod/traefik/ $DEPLOY_DIR/compose/prod/traefik/
              fi

              # Restart Docker Compose services
              cd $DEPLOY_DIR
              docker compose restart

              # Clean up temporary files
              rm -rf $TEMP_DIR
          EOF
